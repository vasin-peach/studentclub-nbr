stages:
  - build
  - deploy

before_script:
  - docker login registry.gitlab.com --username $GITLAB_USER --password $GITLAB_PASS
  - apk update
  - apk add python python-dev py-pip build-base
  - curl -L https://github.com/docker/compose/releases/download/1.8.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  - pip install docker-compose

build:
  stage: build
  services:
    - docker:dind
  script:
    - docker build -t registry.gitlab.com/shinasaki/studentclub-nbr .
    - docker push registry.gitlab.com/shinasaki/studentclub-nbr
  after_script:
    - docker rmi registry.gitlab.com/shinasaki/studentclub-nbr
    - docker logout registry.gitlab.com
  only:
    - master

staging-deploy:
  stage: deploy
  script: 
    - "docker-compose -f .cdconfig/docker-compose.staging.yml pull"
    - "docker-compose -f .cdconfig/docker-compose.staging.yml stop"
    - "docker-compose -f .cdconfig/docker-compose.staging.yml rm --force"
    - "docker-compose -f .cdconfig/docker-compose.staging.yml up -d"
    
  environment:
    name: staging
    url: http://$APPS_DOMAIN
  only:
    - master

production-deploy:
  stage: deploy
  script: 
    - "docker-compose -f .cdconfig/docker-compose.prod.yml pull"
    - "docker-compose -f .cdconfig/docker-compose.prod.yml stop"
    - "docker-compose -f .cdconfig/docker-compose.prod.yml rm --force"
    - "docker-compose -f .cdconfig/docker-compose.prod.yml up -d"
    
  environment:
    name: staging
    url: http://$APPS_DOMAIN
  only:
    - master
  when: manual